name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  claude-review:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Claude Code
      run: npm install -g @anthropic-ai/claude-code
        
    - name: Run Claude Review
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        CLAUDE_LANGUAGE: ko-KR
      run: |
        echo "🔍 Starting Claude Code Review..."
        
        if [ -z "$ANTHROPIC_API_KEY" ]; then
          echo "❌ ANTHROPIC_API_KEY가 설정되지 않았습니다."
          echo "API key not set" > review.txt
        else
          echo "✅ API 키가 설정되었습니다."
          
          # .claude 명령어 규칙 읽기
          if [ -f ".claude/commands/review-pr.md" ]; then
            echo "📋 .claude 명령어 규칙 발견, 한국어 리뷰 모드로 실행"
            
            # 변경된 파일들 확인
            CHANGED_FILES=$(git diff --name-only HEAD~1)
            echo "변경된 파일들: $CHANGED_FILES"
            
            # 한국어 리뷰 명령어 실행 (Claude Code의 review-pr 사용)
            echo "실행중: claude review-pr (한국어 설정)"
            CLAUDE_LANGUAGE=ko claude review-pr > review.txt 2>&1 || echo "Review completed with status: $?"
            
            # 리뷰 결과에 .claude 규칙 준수 여부 확인 후 한국어로 재포맷
            if grep -q "English" review.txt || ! grep -q "한국어\|Korean\|🚨\|⚠️\|💡" review.txt; then
              echo "영어 응답 감지, 한국어로 재처리 중..."
              echo "다음은 PR 리뷰 결과입니다. .claude/commands/review-pr.md 규칙에 따라 한국어로 응답해주세요:" > korean_prompt.txt
              echo "" >> korean_prompt.txt
              echo "=== .claude 리뷰 규칙 ===" >> korean_prompt.txt  
              cat .claude/commands/review-pr.md >> korean_prompt.txt
              echo "" >> korean_prompt.txt
              echo "=== 기존 리뷰 결과 ===" >> korean_prompt.txt
              cat review.txt >> korean_prompt.txt
              echo "" >> korean_prompt.txt
              echo "=== 변경된 파일들 ===" >> korean_prompt.txt
              echo "$CHANGED_FILES" >> korean_prompt.txt
              
              # 표준 claude 명령어로 재처리
              claude "$(cat korean_prompt.txt)" > review_korean.txt 2>&1 && mv review_korean.txt review.txt
            fi
          else
            echo "실행중: claude review-pr"
            claude review-pr > review.txt 2>&1 || echo "Review completed with status: $?"
          fi
          
          echo "=== Review Output ==="
          cat review.txt
        fi
        
    - name: Create PR Comment
      if: always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          try {
            let reviewContent = '';
            try {
              reviewContent = fs.readFileSync('review.txt', 'utf8');
            } catch (e) {
              reviewContent = 'Review file not found or empty';
            }
            
            console.log('Review content length:', reviewContent.length);
            console.log('Review content preview:', reviewContent.substring(0, 200));
            
            // API 키/크레딧 문제 체크
            const hasApiIssue = reviewContent.includes('API key not set') ||
                               reviewContent.includes('authentication failed') ||
                               reviewContent.includes('insufficient credits') ||
                               reviewContent.includes('command not found') ||
                               reviewContent.length < 10;
                               
            if (hasApiIssue) {
              const errorComment = `## 🤖 Claude Code Review
          
          ❌ **설정 또는 실행 문제 발생**
          
          \`\`\`
          ${reviewContent.substring(0, 500)}
          \`\`\`
          
          **가능한 원인:**
          1. **API 키 미설정**: Repository → Settings → Secrets → Actions에서 ANTHROPIC_API_KEY 확인
          2. **Claude CLI 설치 문제**: npm 패키지 설치 오류
          3. **크레딧 부족**: [console.anthropic.com](https://console.anthropic.com)에서 잔액 확인
          
          **해결 후**: PR 재실행 또는 새 커밋 푸시
          
          ---
          *Powered by Claude Code*`;

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: errorComment
              });
              return;
            }
            
            // 한국어 패턴 확인
            const hasKorean = reviewContent.includes('🚨') || 
                            reviewContent.includes('⚠️') ||
                            reviewContent.includes('💡') ||
                            /[가-힣]/.test(reviewContent);
            
            // 리뷰 결과 분석
            const criticalIssues = (reviewContent.match(/🚨|CRITICAL|심각한/gi) || []).length;
            const securityIssues = (reviewContent.match(/보안|security|SQL injection|하드코딩/gi) || []).length;
            
            // 전체 리뷰가 너무 길면 축약 (GitHub 댓글 제한 고려)
            let displayReview = reviewContent;
            if (reviewContent.length > 2000) {
              displayReview = reviewContent.substring(0, 2000) + '\n\n... (전체 내용은 Actions 로그에서 확인하세요)';
            }
            
            const successComment = `## 🤖 Claude Code Review
          
          ### 📊 분석 결과
          - **언어**: ${hasKorean ? '한국어 ✅' : '영어 (한국어 변환 필요)'}
          - **심각한 이슈**: ${criticalIssues}개 감지
          - **보안 관련**: ${securityIssues}개 항목
          
          ### 🔍 상세 리뷰 결과
          
          <details>
          <summary><strong>📋 전체 리뷰 내용 보기 (클릭)</strong></summary>
          
          \`\`\`
          ${displayReview}
          \`\`\`
          
          </details>
          
          ### 📋 다음 단계
          1. **상세 로그**: [GitHub Actions 실행 결과](../../actions) 확인
          2. **이슈 수정**: 발견된 문제점들 개선
          3. **재검토**: 수정 후 새 커밋으로 재검증
          
          ---
          *Auto-generated by Claude Code Review*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: successComment
            });
            
          } catch (error) {
            console.error('Error in comment creation:', error);
            
            // 최후의 fallback
            const fallbackComment = `## 🤖 Claude Code Review
          
          ⚠️ **댓글 생성 중 오류 발생**
          
          **Error**: ${error.message || 'Unknown error'}
          
          **디버그 정보**:
          - Error type: ${typeof error}
          - Stack: ${error.stack ? error.stack.substring(0, 300) : 'No stack trace'}
          
          **해결 방법**:
          1. [GitHub Actions 로그](../../actions)에서 전체 리뷰 내용 확인
          2. 워크플로우 재실행
          3. 이슈 지속 시 리포지토리 관리자에게 문의
          
          ---
          *Claude Code Review Debug*`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,  
              repo: context.repo.repo,
              body: fallbackComment
            });
          }
